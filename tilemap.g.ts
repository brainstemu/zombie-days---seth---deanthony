// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`0c000a00010101010101010102020202020202020202020102020202020202010101010101010101020202010202020201020201020202010102020201020201020202020102020201010101010102020102020201040505020101010101010101090b0a020202020202020201090b0a010101030201020201070608`, img`
. . . . . . . . 2 2 2 2 
2 2 2 2 2 2 2 . 2 2 2 2 
2 2 2 . . . . . . . . . 
2 2 2 . 2 2 2 2 . 2 2 . 
2 2 2 . . 2 2 2 . 2 2 . 
2 2 2 2 . 2 2 2 . . . . 
. . 2 2 . 2 2 2 . . . . 
2 . . . . . . . . . . . 
2 2 2 2 2 2 2 2 . . . . 
. . . . 2 . 2 2 . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.castle.tileGrass3,sprites.builtin.forestTiles5,sprites.builtin.forestTiles6,sprites.builtin.forestTiles14,sprites.builtin.forestTiles13,sprites.builtin.forestTiles15,sprites.builtin.forestTiles9,sprites.builtin.forestTiles11,sprites.builtin.forestTiles10], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 2 . . . . . . . . 
. . 2 2 2 2 2 2 2 . . . . . . . 
. 2 . 2 2 . 2 . . . . . . . . . 
. 2 2 2 2 . 2 . . . . . . . . . 
. . 2 . . . 2 . . . . . . . . . 
. . 2 . . 2 . . . . . . . . . . 
. 2 2 . . 2 . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 . . . . . . . . . . 2 2 2 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 . . . . 2 . . 2 . . 2 2 
. 2 2 2 . 2 2 . 2 . . 2 . 2 . . 
2 2 2 2 2 2 2 . . . 2 2 2 2 2 . 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 2 . 
. . . . . . 2 . 2 . . . . . . . 
2 2 2 2 2 . 2 . . . . . . . . . 
2 2 2 2 2 . 2 . . 2 2 2 2 2 . 2 
. 2 2 2 2 . 2 . 2 2 2 2 2 2 . 2 
. . . . 2 . . . . 2 . . 2 2 . 2 
. 2 2 2 2 . 2 2 2 2 2 . 2 2 . . 
. . 2 2 2 . 2 2 2 2 2 2 . . . . 
2 2 . 2 2 . . . . . . 2 . . . . 
. . . . . . . 2 2 . . 2 . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.castle.tileGrass2,sprites.castle.tileDarkGrass2,sprites.builtin.brick], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
